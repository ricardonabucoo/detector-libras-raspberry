#!/bin/bash

# Script de instala√ß√£o do Detector LIBRAS para Raspberry Pi 3B+
# Autor: Sistema de Detec√ß√£o LIBRAS
# Uso: ./install.sh

set -e  # Sai se algum comando falhar

echo "========================================"
echo "  DETECTOR LIBRAS - RASPBIAN DESKTOP"
echo "========================================"
echo ""
echo "Instalando depend√™ncias..."
echo ""

# Verifica se est√° rodando como root
if [[ $EUID -eq 0 ]]; then
   echo " N√£o execute como root (sudo). Execute como usu√°rio pi."
   exit 1
fi

# Verifica se est√° no Raspbian
if ! grep -q "Raspberry Pi" /proc/device-tree/model 2>/dev/null; then
    echo " Este script foi projetado para Raspberry Pi"
    echo "Continuando mesmo assim..."
fi

# Atualiza sistema
echo "üì¶ Atualizando sistema..."
sudo apt update -y
sudo apt upgrade -y

echo "üîß Instalando depend√™ncias do sistema..."
sudo apt install -y python3-pip python3-dev python3-setuptools
sudo apt install -y cmake pkg-config build-essential
sudo apt install -y libjpeg-dev libtiff5-dev libjasper-dev libpng-dev
sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt install -y libxvidcore-dev libx264-dev
sudo apt install -y libfontconfig1-dev libcairo2-dev
sudo apt install -y libgdk-pixbuf2.0-dev libpango1.0-dev
sudo apt install -y libgtk2.0-dev libgtk-3-dev
sudo apt install -y libatlas-base-dev gfortran
sudo apt install -y libhdf5-dev libhdf5-serial-dev libhdf5-103
sudo apt install -y libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5
sudo apt install -y v4l-utils  # Para controle avan√ßado de webcam
sudo apt install -y python3-tk  # Para GUI adicional
sudo apt install -y cheese  # Para testar webcam

echo "üì∑ Configurando suporte para Webcam USB..."
# Webcam USB n√£o precisa de configura√ß√£o especial

echo " Habilitando interfaces GPIO, SPI e I2C..."
sudo raspi-config nonint do_spi 0
sudo raspi-config nonint do_i2c 0

echo " Instalando bibliotecas Python..."

# Atualiza pip
python3 -m pip install --upgrade pip

echo " Instalando OpenCV com suporte GUI..."
pip3 install opencv-python==4.5.3.56
pip3 install opencv-contrib-python==4.5.3.56

echo " Instalando NumPy..."
pip3 install numpy

echo " Instalando RPi.GPIO..."
pip3 install RPi.GPIO

echo " Instalando depend√™ncias adicionais..."
pip3 install imutils
pip3 install pillow
pip3 install psutil  # Para monitoramento

echo " Configurando permiss√µes do usu√°rio..."
sudo usermod -a -G gpio pi
sudo usermod -a -G video pi

echo " Configurando arquivos do projeto..."

# Torna scripts execut√°veis
chmod +x start_libras.sh
chmod +x monitor.py
chmod +x optimize.sh

# Cria diret√≥rio para logs e debug
mkdir -p logs
mkdir -p debug_frames

# Copia configura√ß√£o de exemplo se n√£o existir
if [ ! -f "user_config.json" ]; then
    cp examples/user_config.json . 2>/dev/null || echo "Arquivo de config exemplo n√£o encontrado"
fi

echo " Configurando mem√≥ria GPU para OpenCV..."
# Verifica mem√≥ria GPU atual
GPU_MEM=$(vcgencmd get_mem gpu | cut -d'=' -f2 | cut -d'M' -f1)
if [ "$GPU_MEM" -lt 64 ]; then
    echo "‚öôÔ∏è Aumentando mem√≥ria GPU para 128MB..."
    echo "gpu_mem=128" | sudo tee -a /boot/config.txt
    echo " Ser√° necess√°rio reiniciar ap√≥s a instala√ß√£o"
    NEED_REBOOT=1
fi

echo "üé® Criando atalho na √°rea de trabalho..."
cat > ~/Desktop/LibrasDetector.desktop << 'EOF'
[Desktop Entry]
Name=Detector LIBRAS
Comment=Detector de linguagem de sinais LIBRAS
Exec=lxterminal --working-directory=%PWD% -e "./start_libras.sh"
Icon=camera-video
Terminal=false
Type=Application
Categories=AudioVideo;Education;
StartupNotify=true
EOF

# Substitui %PWD% pelo diret√≥rio atual
sed -i "s|%PWD%|$(pwd)|g" ~/Desktop/LibrasDetector.desktop
chmod +x ~/Desktop/LibrasDetector.desktop

echo "üì± Criando entrada no menu de aplica√ß√µes..."
sudo tee /usr/share/applications/libras-detector.desktop << EOF
[Desktop Entry]
Name=Detector LIBRAS
Comment=Sistema de detec√ß√£o de linguagem de sinais
Exec=lxterminal --working-directory=$(pwd) -e "python3 libras_detector_rpi.py"
Icon=camera-video
Terminal=false
Type=Application
Categories=AudioVideo;Education;
StartupNotify=true
EOF

echo ""
echo "========================================"
echo " INSTALA√á√ÉO CONCLU√çDA!"
echo "========================================"
echo ""
echo " PR√ìXIMOS PASSOS:"
echo ""
echo "1Ô∏è  Conecte uma WEBCAM USB na Raspberry Pi"
echo "   - Teste com: lsusb | grep -i camera"
echo "   - Ou abra 'cheese' para testar"
echo ""
echo "2Ô∏è  Conecte o MOTOR STEPPER aos pinos GPIO:"
echo "   IN1 ‚Üí GPIO 18 (Pin 12)"
echo "   IN2 ‚Üí GPIO 19 (Pin 35)"
echo "   IN3 ‚Üí GPIO 20 (Pin 38)"
echo "   IN4 ‚Üí GPIO 21 (Pin 40)"
echo "   VCC ‚Üí 5V (Pin 2)"
echo "   GND ‚Üí GND (Pin 6)"
echo ""

if [ "$NEED_REBOOT" = "1" ]; then
echo "3Ô∏è  REINICIE o sistema:"
echo "   sudo reboot"
echo ""
echo "4Ô∏è Ap√≥s reiniciar, teste os componentes:"
else
echo "3Ô∏è Teste os componentes:"
fi

echo "   python3 test_camera.py    # Testa webcam USB"
echo "   python3 test_gpio.py      # Testa motor stepper"
echo ""
echo "4Ô∏è  Execute o detector:"
echo "   ./start_libras.sh"
echo "   # ou clique no atalho da √°rea de trabalho"
echo ""
echo " Consulte a documenta√ß√£o em docs/ para mais detalhes"
echo ""
echo " DETECTOR LIBRAS PRONTO PARA USO!"
echo "========================================"

# Salva informa√ß√µes da instala√ß√£o
cat > installation_info.txt << EOF
Instala√ß√£o conclu√≠da em: $(date)
Sistema: $(uname -a)
Python: $(python3 --version)
OpenCV: $(python3 -c "import cv2; print(cv2.__version__)" 2>/dev/null || echo "Erro ao detectar")
Usu√°rio: $(whoami)
Diret√≥rio: $(pwd)
EOF

echo "‚Ñπ Informa√ß√µes da instala√ß√£o salvas em: installation_info.txt"